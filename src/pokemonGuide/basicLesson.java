/*
 Matthew Ludwig
 This is where the lesson for the pokemon fundementals begin
*/

package pokemonGuide;

/**
 *
 * @author malud0519
 */
import java.util.*; 
public class basicLesson extends javax.swing.JFrame {

    /**
     * Creates new form basicLesson
     */
    
    ArrayList <String> type = new ArrayList <>();
    
    public basicLesson() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jSpinner1 = new javax.swing.JSpinner();
        buttonGroup1 = new javax.swing.ButtonGroup();
        typeButton = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputText = new javax.swing.JTextArea();
        statboosts = new javax.swing.JRadioButton();
        rng = new javax.swing.JRadioButton();
        typeMatchup = new javax.swing.JRadioButton();
        natures = new javax.swing.JRadioButton();
        basestats = new javax.swing.JRadioButton();
        items = new javax.swing.JRadioButton();
        ivs = new javax.swing.JRadioButton();
        moves = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        topicButton = new javax.swing.JButton();
        fire = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        water = new javax.swing.JRadioButton();
        grass = new javax.swing.JRadioButton();
        bug = new javax.swing.JRadioButton();
        normal = new javax.swing.JRadioButton();
        flying = new javax.swing.JRadioButton();
        electric = new javax.swing.JRadioButton();
        fighting = new javax.swing.JRadioButton();
        ground = new javax.swing.JRadioButton();
        rock = new javax.swing.JRadioButton();
        ice = new javax.swing.JRadioButton();
        ghost = new javax.swing.JRadioButton();
        dragon = new javax.swing.JRadioButton();
        fairy = new javax.swing.JRadioButton();
        psychic = new javax.swing.JRadioButton();
        dark = new javax.swing.JRadioButton();
        steel = new javax.swing.JRadioButton();
        poison = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        goBack = new javax.swing.JMenuItem();
        reset = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        title.setForeground(new java.awt.Color(51, 0, 255));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Introduction ");

        outputText.setEditable(false);
        outputText.setColumns(20);
        outputText.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        outputText.setRows(5);
        outputText.setText("By now you have started pokemon, but you \nprobably have some questions about pokemon \nbattling. There are many different mechanics\nthat influence the attack damage and the \namount of damage taken. In total, there are \n5 different pokemon stats which affect the\ndamage. These are HP, Attack, Defense, Special\nAttack and Special Defense. Each of these are\nset prior to each battle but, they can be \nincreased using stat boosts.You can choose \nwhich topic to learn more about below.");
        jScrollPane1.setViewportView(outputText);

        buttonGroup1.add(statboosts);
        statboosts.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        statboosts.setText("Stat Boosts");
        statboosts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statboostsActionPerformed(evt);
            }
        });

        buttonGroup1.add(rng);
        rng.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rng.setText("RNG");
        rng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rngActionPerformed(evt);
            }
        });

        buttonGroup1.add(typeMatchup);
        typeMatchup.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        typeMatchup.setText("Type Matchups");
        typeMatchup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeMatchupActionPerformed(evt);
            }
        });

        buttonGroup1.add(natures);
        natures.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        natures.setText("Natures");
        natures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naturesActionPerformed(evt);
            }
        });

        buttonGroup1.add(basestats);
        basestats.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        basestats.setText("Base Stats");
        basestats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basestatsActionPerformed(evt);
            }
        });

        buttonGroup1.add(items);
        items.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        items.setText("Items");
        items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsActionPerformed(evt);
            }
        });

        buttonGroup1.add(ivs);
        ivs.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ivs.setText("IV's and EV's");
        ivs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ivsActionPerformed(evt);
            }
        });

        buttonGroup1.add(moves);
        moves.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        moves.setText("Moves");
        moves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movesActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Available Topics");

        topicButton.setText("Go");
        topicButton.setEnabled(false);
        topicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topicButtonActionPerformed(evt);
            }
        });

        typeButton.add(fire);
        fire.setText("Fire");
        fire.setEnabled(false);
        fire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fireActionPerformed(evt);
            }
        });

        typeButton.add(water);
        water.setText("Water");
        water.setEnabled(false);
        water.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waterActionPerformed(evt);
            }
        });

        typeButton.add(grass);
        grass.setText("Grass");
        grass.setEnabled(false);
        grass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grassActionPerformed(evt);
            }
        });

        typeButton.add(bug);
        bug.setText("Bug");
        bug.setEnabled(false);
        bug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bugActionPerformed(evt);
            }
        });

        typeButton.add(normal);
        normal.setText("Normal");
        normal.setEnabled(false);
        normal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalActionPerformed(evt);
            }
        });

        typeButton.add(flying);
        flying.setText("Flying");
        flying.setEnabled(false);
        flying.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flyingActionPerformed(evt);
            }
        });

        typeButton.add(electric);
        electric.setText("Electric");
        electric.setEnabled(false);
        electric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                electricActionPerformed(evt);
            }
        });

        typeButton.add(fighting);
        fighting.setText("Fighting");
        fighting.setEnabled(false);
        fighting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fightingActionPerformed(evt);
            }
        });

        typeButton.add(ground);
        ground.setText("Ground");
        ground.setEnabled(false);
        ground.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groundActionPerformed(evt);
            }
        });

        typeButton.add(rock);
        rock.setText("Rock");
        rock.setEnabled(false);
        rock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockActionPerformed(evt);
            }
        });

        typeButton.add(ice);
        ice.setText("Ice");
        ice.setEnabled(false);
        ice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iceActionPerformed(evt);
            }
        });

        typeButton.add(ghost);
        ghost.setText("Ghost");
        ghost.setEnabled(false);
        ghost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ghostActionPerformed(evt);
            }
        });

        typeButton.add(dragon);
        dragon.setText("Dragon");
        dragon.setEnabled(false);
        dragon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dragonActionPerformed(evt);
            }
        });

        typeButton.add(fairy);
        fairy.setText("Fairy");
        fairy.setEnabled(false);
        fairy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fairyActionPerformed(evt);
            }
        });

        typeButton.add(psychic);
        psychic.setText("Psychic");
        psychic.setEnabled(false);
        psychic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psychicActionPerformed(evt);
            }
        });

        typeButton.add(dark);
        dark.setText("Dark");
        dark.setEnabled(false);
        dark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darkActionPerformed(evt);
            }
        });

        typeButton.add(steel);
        steel.setText("Steel");
        steel.setEnabled(false);
        steel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                steelActionPerformed(evt);
            }
        });

        typeButton.add(poison);
        poison.setText("Poison");
        poison.setEnabled(false);
        poison.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poisonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rng, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statboosts))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(basestats)
                            .addComponent(typeMatchup))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(items)
                            .addComponent(natures))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(moves)
                            .addComponent(ivs)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(topicButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fairy)
                                    .addComponent(electric)
                                    .addComponent(ghost))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(psychic)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dark))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(flying)
                                            .addComponent(ice))
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rock)
                                            .addComponent(normal))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bug)
                                    .addComponent(ground)
                                    .addComponent(steel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(grass)
                                    .addComponent(fighting)
                                    .addComponent(poison))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(water)
                            .addComponent(dragon)
                            .addComponent(fire))))
                .addGap(111, 111, 111))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bug)
                    .addComponent(grass)
                    .addComponent(fire)
                    .addComponent(normal)
                    .addComponent(flying)
                    .addComponent(electric))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rock)
                    .addComponent(ground)
                    .addComponent(fighting)
                    .addComponent(water)
                    .addComponent(ice)
                    .addComponent(ghost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dark)
                    .addComponent(psychic)
                    .addComponent(steel)
                    .addComponent(poison)
                    .addComponent(dragon)
                    .addComponent(fairy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(topicButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statboosts)
                    .addComponent(typeMatchup)
                    .addComponent(natures)
                    .addComponent(moves))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(items)
                    .addComponent(ivs)
                    .addComponent(basestats)
                    .addComponent(rng))
                .addGap(21, 21, 21))
        );

        jMenu1.setText("Help");

        goBack.setText("Go Back");
        goBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackActionPerformed(evt);
            }
        });
        jMenu1.add(goBack);

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        jMenu1.add(reset);

        Exit.setText("Exit Program");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void goBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackActionPerformed
        this.dispose();
        basicGuide pretest = new basicGuide();
        pretest.setVisible(true);
    }//GEN-LAST:event_goBackActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        if (evt.getSource() == reset) {
            dispose();
            basicLesson resetProgram = new basicLesson();
            resetProgram.setVisible(true);
        }
    }//GEN-LAST:event_resetActionPerformed

    private void typeMatchupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeMatchupActionPerformed
     topicButton.setEnabled(true);
      
      
    }//GEN-LAST:event_typeMatchupActionPerformed

    private void rngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rngActionPerformed
        topicButton.setEnabled(true);  // I don't know how to set a button group to visible
    }//GEN-LAST:event_rngActionPerformed

    private void statboostsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statboostsActionPerformed
        topicButton.setEnabled(true);
    }//GEN-LAST:event_statboostsActionPerformed

    private void naturesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naturesActionPerformed
        topicButton.setEnabled(true);
    }//GEN-LAST:event_naturesActionPerformed

    private void movesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movesActionPerformed
        topicButton.setEnabled(true);
    }//GEN-LAST:event_movesActionPerformed
   
    private void topicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topicButtonActionPerformed
        if (typeMatchup.isSelected()) {
          grass.setEnabled(true);
          fire.setEnabled(true);
          bug.setEnabled(true);
          electric.setEnabled(true);
          normal.setEnabled(true);
          water.setEnabled(true);
          flying.setEnabled(true);
          fighting.setEnabled(true);
          ground.setEnabled(true);
          poison.setEnabled(true);
          steel.setEnabled(true);
          rock.setEnabled(true);
          dark.setEnabled(true);
          psychic.setEnabled(true);
          ice.setEnabled(true);
          fairy.setEnabled(true);
          ghost.setEnabled(true);
          title.setText("Type Matchups");
          outputText.setText("");
        }
        
        
   
    }//GEN-LAST:event_topicButtonActionPerformed

    private void basestatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basestatsActionPerformed
        topicButton.setEnabled(true);
    }//GEN-LAST:event_basestatsActionPerformed

    private void itemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsActionPerformed
        topicButton.setEnabled(true);
    }//GEN-LAST:event_itemsActionPerformed

    private void ivsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ivsActionPerformed
        topicButton.setEnabled(true);
    }//GEN-LAST:event_ivsActionPerformed

    private void electricActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_electricActionPerformed
        type.add("Electric");   /*
                                        In hindsight, this should have been made using the isSelected()
                                        method to make the algorithm more efficient
                                    */
    }//GEN-LAST:event_electricActionPerformed
                                    
    private void flyingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flyingActionPerformed
        type.add("Flying");
    }//GEN-LAST:event_flyingActionPerformed

    private void normalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalActionPerformed
        type.add("Normal");
    }//GEN-LAST:event_normalActionPerformed

    private void bugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bugActionPerformed
        type.add("Bug");
    }//GEN-LAST:event_bugActionPerformed

    private void grassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grassActionPerformed
        type.add("Grass");
    }//GEN-LAST:event_grassActionPerformed

    private void fireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fireActionPerformed
        type.add("Fire");
    }//GEN-LAST:event_fireActionPerformed

    private void waterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waterActionPerformed
        type.add("Water");
    }//GEN-LAST:event_waterActionPerformed

    private void dragonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dragonActionPerformed
        type.add("Dragon"); 
    }//GEN-LAST:event_dragonActionPerformed

    private void poisonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poisonActionPerformed
       type.add("Poison"); 
    }//GEN-LAST:event_poisonActionPerformed

    private void steelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_steelActionPerformed
        type.add("Steel");
    }//GEN-LAST:event_steelActionPerformed

    private void fightingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fightingActionPerformed
        type.add("Fighting");
    }//GEN-LAST:event_fightingActionPerformed

    private void groundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groundActionPerformed
        type.add("Ground");
    }//GEN-LAST:event_groundActionPerformed

    private void darkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_darkActionPerformed
        type.add("Dark");
    }//GEN-LAST:event_darkActionPerformed

    private void rockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockActionPerformed
         type.add("Rock");
    }//GEN-LAST:event_rockActionPerformed

    private void psychicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_psychicActionPerformed
        type.add("Psychic");
    }//GEN-LAST:event_psychicActionPerformed

    private void iceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iceActionPerformed
        type.add("Ice");
    }//GEN-LAST:event_iceActionPerformed

    private void fairyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fairyActionPerformed
        type.add("Fairy");
    }//GEN-LAST:event_fairyActionPerformed

    private void ghostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ghostActionPerformed
         type.add("Ghost");
    }//GEN-LAST:event_ghostActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(basicLesson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(basicLesson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(basicLesson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(basicLesson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new basicLesson().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JRadioButton basestats;
    private javax.swing.JRadioButton bug;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton dark;
    private javax.swing.JRadioButton dragon;
    private javax.swing.JRadioButton electric;
    private javax.swing.JRadioButton fairy;
    private javax.swing.JRadioButton fighting;
    private javax.swing.JRadioButton fire;
    private javax.swing.JRadioButton flying;
    private javax.swing.JRadioButton ghost;
    private javax.swing.JMenuItem goBack;
    private javax.swing.JRadioButton grass;
    private javax.swing.JRadioButton ground;
    private javax.swing.JRadioButton ice;
    private javax.swing.JRadioButton items;
    private javax.swing.JRadioButton ivs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JRadioButton moves;
    private javax.swing.JRadioButton natures;
    private javax.swing.JRadioButton normal;
    private javax.swing.JTextArea outputText;
    private javax.swing.JRadioButton poison;
    private javax.swing.JRadioButton psychic;
    private javax.swing.JMenuItem reset;
    private javax.swing.JRadioButton rng;
    private javax.swing.JRadioButton rock;
    private javax.swing.JRadioButton statboosts;
    private javax.swing.JRadioButton steel;
    private javax.swing.JLabel title;
    private javax.swing.JButton topicButton;
    private javax.swing.ButtonGroup typeButton;
    private javax.swing.JRadioButton typeMatchup;
    private javax.swing.JRadioButton water;
    // End of variables declaration//GEN-END:variables
}
